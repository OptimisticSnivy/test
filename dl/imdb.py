# -*- coding: utf-8 -*-
"""imdb.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1R2kvP1fkHXycQukc1z_iAV49Yb69-D_-
"""

# Step 1: Import libraries
import tensorflow as tf
from tensorflow.keras import layers
import matplotlib.pyplot as plt

# Step 2: Load the IMDB dataset
# num_words=10000: only keep the top 10,000 most frequent words
(X_train, y_train), (X_test, y_test) = tf.keras.datasets.imdb.load_data(num_words=10000)

# Step 3: Preprocess - Pad sequences to the same length
# Makes all sequences 256 words long (truncates or pads as needed)
X_train = tf.keras.preprocessing.sequence.pad_sequences(X_train, maxlen=256)
X_test = tf.keras.preprocessing.sequence.pad_sequences(X_test, maxlen=256)

# Step 4: Build the Deep Neural Network
model = tf.keras.Sequential([
    layers.Embedding(input_dim=10000, output_dim=64, input_length=256),
    layers.Flatten(),  # flatten the embeddings into 1D
    layers.Dense(64, activation='relu'),
    layers.Dense(1, activation='sigmoid')  # sigmoid for binary classification
])

# Step 5: Compile the model
model.compile(optimizer='adam',
              loss='binary_crossentropy',
              metrics=['accuracy'])

# Step 6: Train the model
history = model.fit(X_train, y_train,
                    epochs=10,
                    batch_size=512,
                    validation_split=0.2,
                    verbose=1)

# Step 7: Evaluate the model
loss, accuracy = model.evaluate(X_test, y_test)
print(f"Test Accuracy: {accuracy:.4f}")

# Step 8: Plot training and validation accuracy
plt.plot(history.history['accuracy'], label='Training Accuracy')
plt.plot(history.history['val_accuracy'], label='Validation Accuracy')
plt.xlabel('Epoch')
plt.ylabel('Accuracy')
plt.title('Training vs Validation Accuracy')
plt.legend()
plt.show()